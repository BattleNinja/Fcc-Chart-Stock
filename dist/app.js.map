{"version":3,"sources":["../server/app.js"],"names":["express","require","mongoose","cors","bodyParser","config","route","path","Stock","financeController","Promise","global","connect","database","connection","on","console","log","err","app","use","static","join","__dirname","json","get","req","res","send","deletStock","stock","port","server","listen","io","socket","stockName","dataReciever","getData","emit","msg","data","name"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,WAAWD,QAAQ,UAAR,CAAjB;AACA,IAAME,OAAOF,QAAQ,MAAR,CAAb;AACA,IAAMG,aAAaH,QAAQ,aAAR,CAAnB;AACA,IAAMI,SAASJ,QAAQ,mBAAR,CAAf;AACA,IAAMK,QAAQL,QAAQ,iBAAR,CAAd;AACA,IAAMM,OAAON,QAAQ,MAAR,CAAb;AACA,IAAMO,QAAQP,QAAQ,eAAR,CAAd;AACA,IAAMQ,oBAAoBR,QAAQ,gCAAR,CAA1B;;AAEAC,SAASQ,OAAT,GAAmBC,OAAOD,OAA1B;AACAR,SAASU,OAAT,CAAiBP,OAAOQ,QAAxB;AACAX,SAASY,UAAT,CAAoBC,EAApB,CAAuB,WAAvB,EAAoC,YAAM;AACtCC,YAAQC,GAAR,CAAY,yBAAZ,EAAuCZ,OAAOQ,QAA9C;AACH,CAFD;AAGAX,SAASY,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAgC,UAACG,GAAD,EAAS;AACrCF,YAAQC,GAAR,CAAY,iBAAZ,EAA+BC,GAA/B;AACH,CAFD;;AAKA,IAAMC,MAAMnB,SAAZ;;AAEAmB,IAAIC,GAAJ,CAAQjB,MAAR;AACAgB,IAAIC,GAAJ,CAAQpB,QAAQqB,MAAR,CAAed,KAAKe,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR;AACAJ,IAAIC,GAAJ,CAAQhB,WAAWoB,IAAX,EAAR;;AAEAL,IAAIM,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,QAAIC,IAAJ,CAAS,kBAAT;AACH,CAFD;AAGAT,IAAIC,GAAJ,CAAQ,MAAR,EAAgBd,KAAhB;AACAa,IAAIM,GAAJ,CAAQ,OAAR,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3BnB,UAAMqB,UAAN,CAAiB,OAAjB,EAA0B,UAACX,GAAD,EAAMY,KAAN,EAAgB;AACtC,YAAIZ,GAAJ,EAAS,MAAMA,GAAN;AACTS,YAAIC,IAAJ,CAASE,KAAT;AACH,KAHD;AAIH,CALD;AAMA,IAAMC,OAAO9B,QAAQ,eAAR,CAAb;AACA,IAAM+B,SAASb,IAAIc,MAAJ,CAAWF,IAAX,EAAiB,YAAM;AAC9Bf,YAAQC,GAAR,CAAY,2BAAZ,EAAyCc,IAAzC;AACH,CAFU,CAAf;;AAKA,IAAMG,KAAKjC,QAAQ,WAAR,EAAqB+B,MAArB,CAAX;AACAE,GAAGnB,EAAH,CAAM,YAAN,EAAoB,UAACoB,MAAD,EAAY;;AAE5B;AACAA,WAAOpB,EAAP,CAAU,KAAV,EAAiB,UAACqB,SAAD,EAAe;AAC5B3B,0BAAkB4B,YAAlB,CAA+BD,SAA/B,EAA0C,UAAClB,GAAD,EAAMY,KAAN,EAAgB;AACtD,gBAAIZ,GAAJ,EAAS,MAAMA,GAAN;AACTT,8BAAkB6B,OAAlB,CAA0BR,KAA1B,EAAiC,gBAAQ;AACrCI,mBAAGK,IAAH,CAAQ,KAAR,EAAe,EAACT,OAAOM,SAAR,EAAmBI,KAAKC,IAAxB,EAAf;AACH,aAFD;AAGH,SALD;AAMH,KAPD;;AAUA;AACAN,WAAOpB,EAAP,CAAU,QAAV,EAAoB,UAACqB,SAAD,EAAe;AAC/B5B,cAAMqB,UAAN,CAAiBO,SAAjB,EAA4B,UAAClB,GAAD,EAAMY,KAAN,EAAgB;AACxCK,mBAAOI,IAAP,CAAY,QAAZ,EAAsB,EAACC,KAAKV,MAAMY,IAAZ,EAAtB;AACH,SAFD;AAGH,KAJD;AAKH,CAnBD","file":"app.js","sourcesContent":["const express = require('express');\nconst mongoose = require('mongoose');\nconst cors = require('cors');\nconst bodyParser = require('body-parser');\nconst config = require('./config/database');\nconst route = require('./routes/routes');\nconst path = require('path');\nconst Stock = require('./model/stock');\nconst financeController = require('./controller/financeController');\n\nmongoose.Promise = global.Promise;\nmongoose.connect(config.database);\nmongoose.connection.on('connected', () => {\n    console.log(\"Successfully connect to\", config.database);\n});\nmongoose.connection.on('error', (err) => {\n    console.log('Database error:', err);\n});\n\n\nconst app = express();\n\napp.use(cors());\napp.use(express.static(path.join(__dirname, '../public')));\napp.use(bodyParser.json());\n\napp.get('/', (req, res) => {\n    res.send('Invalid Endpoint');\n});\napp.use('/api', route);\napp.get('/test', (req, res) => {\n    Stock.deletStock('apple', (err, stock) => {\n        if (err) throw err;\n        res.send(stock);\n    });\n});\nconst port = require('./config/port');\nconst server = app.listen(port, () => {\n        console.log('app is listening on port:', port);\n    }\n);\n\nconst io = require('socket.io')(server);\nio.on('connection', (socket) => {\n\n    // on listening add -- - - -- - - - - - -- -- - -- - -- - - - - --\n    socket.on('add', (stockName) => {\n        financeController.dataReciever(stockName, (err, stock) => {\n            if (err) throw err;\n            financeController.getData(stock, data => {\n                io.emit('add', {stock: stockName, msg: data});\n            })\n        });\n    });\n\n\n    // on listening remove - - - -- - - - - -- - - - - - - - - - -- - - -\n    socket.on('remove', (stockName) => {\n        Stock.deletStock(stockName, (err, stock) => {\n            socket.emit('remove', {msg: stock.name});\n        });\n    });\n});\n"]}